variables: 
  - template: variables/global.yaml@ci_templates
  - template: variables/go.yaml@ci_templates
  - template: variables/k8s.yaml@ci_templates
  - template: variables/git.yaml@ci_templates

resources:
  repositories:
    - repository: ci_templates
      type: github
      name: nalej/ci-templates
      endpoint: nalej
      ref: refs/tags/v1.0.5

stages:
- stage: 'SlackStart'
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'    
    steps:
    - template: slack/build/start.yaml@ci_templates
      parameters:
        author: $(authorName)
        repository: $(Build.Repository.Name)
        branch: $(Build.SourceBranch)
        commit: $(Build.SourceVersionMessage)
        buildUrl: $(buildUrl)$(Build.BuildId)
        slackWebhook: $(slackBuilds)

- stage: 'BinaryBuild'
  dependsOn: 'SlackStart'
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'  
    steps:
    - template: misc/nalej-component.yaml@ci_templates 
    - template: steps/go-main.yaml@ci_templates

- stage: 'ImageBuild'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: 'BinaryBuild'
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'  
    steps:
    - template: misc/nalej-component.yaml@ci_templates 
    - template: steps/docker-main.yaml@ci_templates

- stage: 'ComponentDeploy'
  #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  #dependsOn: 'ImageBuild'
  dependsOn: 'BinaryBuild'
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'  
    variables:
      - name: authxSecret
        value: "this-is-my-little-secret"
      - group: testing-placeholders
    steps:
    - template: misc/nalej-component.yaml@ci_templates

    - template: k8s/yaml/render.yaml@ci_templates
      parameters:
        namespace: "__NPH_NAMESPACE"
        componentList: $(componentList)
        environment: "staging"
        version: edge

    - template: k8s/secrets/create.yaml@ci_templates
      parameters:
        name: authx-secret
        namespace: "__NPH_NAMESPACE"
        yamlPath: $(system.defaultWorkingDirectory)/dist/yaml/$(stagingDockerRegistry)/mngtcluster
        yamlFile: authx.secret.yaml
        contents: "{'secret': '$(placeholderAuthxSecret)'}"

    - template: k8s/yaml/namespace.yaml@ci_templates
      parameters:
        namespace: $(namespace)
        yamlPath: dist/yaml/staging

    - template: placeholders/replace_secrets.yaml@ci_templates
      parameters:
        yamlPath: dist/yaml/$(stagingDockerRegistry)
        placeholders: "$(placeholderAuthxSecret)"
        values: "$(authxSecret)"

    - task: DownloadSecureFile@1
      name: ci_kubeconfig
      inputs:
        secureFile: ci_kubeconfig.yaml
      displayName: "Get K8S configuration file"

    - template: k8s/ns/create.yaml@ci_templates
      parameters:
        kubeconfig: $(kubeconfig)
        namespace: $(namespace)

    - template: k8s/resources/create.yaml@ci_templates
      parameters:
        kubeconfig: $(kubeconfig)
        platform: mngtcluster
        environment: "staging"
    
    - template: templates/verify_deploy.yaml
      parameters:
        kubeconfig: $(kubeconfig)
        namespace: $(namespace)

    - template: k8s/logs/archive.yaml@ci_templates
      parameters:
        kubeconfig: $(kubeconfig)
        namespace: $(namespace)   

    - template: k8s/ns/delete.yaml@ci_templates
      parameters:
        kubeconfig: $(kubeconfig)
        namespace: $(namespace)

- stage: 'AssetPublish'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: 'ComponentDeploy'
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'  
    steps:
    - template: misc/nalej-component.yaml@ci_templates
    - template: steps/assets-main.yaml@ci_templates


- stage: 'SlackFinish'
  condition: always()
  jobs:
  - job: 
    pool:
      vmImage: 'ubuntu-latest'  
    steps: 
    - template: steps/slack-finish-main.yaml@ci_templates